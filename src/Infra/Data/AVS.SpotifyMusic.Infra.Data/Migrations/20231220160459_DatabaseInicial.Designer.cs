// <auto-generated />
using System;
using AVS.SpotifyMusic.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AVS.SpotifyMusic.Infra.Data.Migrations
{
    [DbContext(typeof(SpotifyMusicContext))]
    [Migration("20231220160459_DatabaseInicial")]
    partial class DatabaseInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Conta.Entidades.Assinatura", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("Bit")
                        .HasColumnName("Ativo");

                    b.Property<DateTime?>("DtAtualizacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataCriacao");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Assinaturas", (string)null);
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Conta.Entidades.Playlist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Descricao");

                    b.Property<DateTime?>("DtAtualizacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataCriacao");

                    b.Property<string>("Foto")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Foto");

                    b.Property<bool>("Publica")
                        .HasColumnType("Bit")
                        .HasColumnName("Publica");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Titulo");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Playlists", (string)null);
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Conta.Entidades.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("Bit")
                        .HasColumnName("Ativo");

                    b.Property<DateTime?>("DtAtualizacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateTime>("DtNascimento")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataNascimento");

                    b.Property<string>("Foto")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Foto");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Core.Notificacoes.Notificacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DestinoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DtAtualizacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataNotificacao");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Mensagem");

                    b.Property<Guid?>("RemetenteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoNotificacao")
                        .HasColumnType("int")
                        .HasColumnName("TipoNotificacao");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Titulo");

                    b.HasKey("Id");

                    b.HasIndex("DestinoId");

                    b.HasIndex("RemetenteId");

                    b.ToTable("Notificacoes", (string)null);
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Pagamentos.Entidades.Cartao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("Bit")
                        .HasColumnName("Ativo");

                    b.Property<string>("Cvv")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Cvv");

                    b.Property<DateTime?>("DtAtualizacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataCriacao");

                    b.Property<string>("Expiracao")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("DataExpiracao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Nome");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(19)
                        .HasColumnType("varchar(19)")
                        .HasColumnName("Numero");

                    b.Property<Guid>("PagamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PagamentoId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("Cartoes", (string)null);
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Pagamentos.Entidades.Pagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DtAtualizacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataCriacao");

                    b.Property<int>("Situacao")
                        .HasColumnType("int")
                        .HasColumnName("Situacao");

                    b.HasKey("Id");

                    b.ToTable("Pagamentos", (string)null);
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Pagamentos.Entidades.Transacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CartaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Descricao");

                    b.Property<DateTime?>("DtAtualizacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataTransacao");

                    b.Property<Guid>("PagamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Situacao")
                        .HasColumnType("int")
                        .HasColumnName("Situacao");

                    b.HasKey("Id");

                    b.HasIndex("CartaoId");

                    b.HasIndex("PagamentoId")
                        .IsUnique();

                    b.ToTable("Transacoes", (string)null);
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Streaming.Entidades.Album", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BandaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Descricao");

                    b.Property<DateTime?>("DtAtualizacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataCriacao");

                    b.Property<string>("Foto")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Foto");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Titulo");

                    b.HasKey("Id");

                    b.HasIndex("BandaId");

                    b.ToTable("Albuns", (string)null);
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Streaming.Entidades.Banda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Descricao");

                    b.Property<DateTime?>("DtAtualizacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataCriacao");

                    b.Property<string>("Foto")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Foto");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.ToTable("Bandas", (string)null);
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Streaming.Entidades.Musica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AlbumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DtAtualizacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataCriacao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Musicas", (string)null);
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Streaming.Entidades.Plano", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssinaturaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Descricao");

                    b.Property<DateTime?>("DtAtualizacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DataCriacao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Nome");

                    b.Property<int>("TipoPlano")
                        .HasColumnType("int")
                        .HasColumnName("TipoPlano");

                    b.HasKey("Id");

                    b.HasIndex("AssinaturaId")
                        .IsUnique();

                    b.ToTable("Planos", (string)null);
                });

            modelBuilder.Entity("MusicaPlaylist", b =>
                {
                    b.Property<Guid>("MusicasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlaylistsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MusicasId", "PlaylistsId");

                    b.HasIndex("PlaylistsId");

                    b.ToTable("MusicaPlaylist");
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Conta.Entidades.Assinatura", b =>
                {
                    b.HasOne("AVS.SpotifyMusic.Domain.Conta.Entidades.Usuario", null)
                        .WithMany("Assinaturas")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Conta.Entidades.Playlist", b =>
                {
                    b.HasOne("AVS.SpotifyMusic.Domain.Conta.Entidades.Usuario", "Usuario")
                        .WithMany("Playlists")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Conta.Entidades.Usuario", b =>
                {
                    b.OwnsOne("AVS.SpotifyMusic.Domain.Core.ObjValor.Cpf", "Cpf", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("varchar(11)")
                                .HasColumnName("Cpf");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("AVS.SpotifyMusic.Domain.Core.ObjValor.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("varchar(254)")
                                .HasColumnName("Email");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("AVS.SpotifyMusic.Domain.Core.ObjValor.Senha", "Senha", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Senha");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Cpf")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Senha")
                        .IsRequired();
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Core.Notificacoes.Notificacao", b =>
                {
                    b.HasOne("AVS.SpotifyMusic.Domain.Conta.Entidades.Usuario", "Destino")
                        .WithMany("Notificacoes")
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AVS.SpotifyMusic.Domain.Conta.Entidades.Usuario", "Remetente")
                        .WithMany()
                        .HasForeignKey("RemetenteId");

                    b.Navigation("Destino");

                    b.Navigation("Remetente");
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Pagamentos.Entidades.Cartao", b =>
                {
                    b.HasOne("AVS.SpotifyMusic.Domain.Pagamentos.Entidades.Pagamento", "Pagamento")
                        .WithOne("Cartao")
                        .HasForeignKey("AVS.SpotifyMusic.Domain.Pagamentos.Entidades.Cartao", "PagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AVS.SpotifyMusic.Domain.Conta.Entidades.Usuario", null)
                        .WithMany("Cartoes")
                        .HasForeignKey("UsuarioId");

                    b.OwnsOne("AVS.SpotifyMusic.Domain.Core.ObjValor.Monetario", "Limite", b1 =>
                        {
                            b1.Property<Guid>("CartaoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("Limite");

                            b1.HasKey("CartaoId");

                            b1.ToTable("Cartoes");

                            b1.WithOwner()
                                .HasForeignKey("CartaoId");
                        });

                    b.Navigation("Limite")
                        .IsRequired();

                    b.Navigation("Pagamento");
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Pagamentos.Entidades.Pagamento", b =>
                {
                    b.OwnsOne("AVS.SpotifyMusic.Domain.Core.ObjValor.Monetario", "Valor", b1 =>
                        {
                            b1.Property<Guid>("PagamentoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("ValorPagamento");

                            b1.HasKey("PagamentoId");

                            b1.ToTable("Pagamentos");

                            b1.WithOwner()
                                .HasForeignKey("PagamentoId");
                        });

                    b.Navigation("Valor")
                        .IsRequired();
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Pagamentos.Entidades.Transacao", b =>
                {
                    b.HasOne("AVS.SpotifyMusic.Domain.Pagamentos.Entidades.Cartao", null)
                        .WithMany("Transacoes")
                        .HasForeignKey("CartaoId");

                    b.HasOne("AVS.SpotifyMusic.Domain.Pagamentos.Entidades.Pagamento", "Pagamento")
                        .WithOne("Transacao")
                        .HasForeignKey("AVS.SpotifyMusic.Domain.Pagamentos.Entidades.Transacao", "PagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("AVS.SpotifyMusic.Domain.Core.ObjValor.Monetario", "Valor", b1 =>
                        {
                            b1.Property<Guid>("TransacaoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("Valor");

                            b1.HasKey("TransacaoId");

                            b1.ToTable("Transacoes");

                            b1.WithOwner()
                                .HasForeignKey("TransacaoId");
                        });

                    b.OwnsOne("AVS.SpotifyMusic.Domain.Pagamentos.ObjValor.Merchant", "Merchant", b1 =>
                        {
                            b1.Property<Guid>("TransacaoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Nome")
                                .IsRequired()
                                .HasColumnType("varchar(50)")
                                .HasColumnName("NomeMerchant");

                            b1.HasKey("TransacaoId");

                            b1.ToTable("Transacoes");

                            b1.WithOwner()
                                .HasForeignKey("TransacaoId");
                        });

                    b.Navigation("Merchant")
                        .IsRequired();

                    b.Navigation("Pagamento");

                    b.Navigation("Valor")
                        .IsRequired();
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Streaming.Entidades.Album", b =>
                {
                    b.HasOne("AVS.SpotifyMusic.Domain.Streaming.Entidades.Banda", null)
                        .WithMany("Albuns")
                        .HasForeignKey("BandaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Streaming.Entidades.Musica", b =>
                {
                    b.HasOne("AVS.SpotifyMusic.Domain.Streaming.Entidades.Album", null)
                        .WithMany("Musicas")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("AVS.SpotifyMusic.Domain.Streaming.ObjValor.Duracao", "Duracao", b1 =>
                        {
                            b1.Property<Guid>("MusicaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Valor")
                                .HasColumnType("int")
                                .HasColumnName("Duracao");

                            b1.HasKey("MusicaId");

                            b1.ToTable("Musicas");

                            b1.WithOwner()
                                .HasForeignKey("MusicaId");
                        });

                    b.Navigation("Duracao")
                        .IsRequired();
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Streaming.Entidades.Plano", b =>
                {
                    b.HasOne("AVS.SpotifyMusic.Domain.Conta.Entidades.Assinatura", "Assinatura")
                        .WithOne("Plano")
                        .HasForeignKey("AVS.SpotifyMusic.Domain.Streaming.Entidades.Plano", "AssinaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("AVS.SpotifyMusic.Domain.Core.ObjValor.Monetario", "Valor", b1 =>
                        {
                            b1.Property<Guid>("PlanoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("ValorPlano");

                            b1.HasKey("PlanoId");

                            b1.ToTable("Planos");

                            b1.WithOwner()
                                .HasForeignKey("PlanoId");
                        });

                    b.Navigation("Assinatura");

                    b.Navigation("Valor")
                        .IsRequired();
                });

            modelBuilder.Entity("MusicaPlaylist", b =>
                {
                    b.HasOne("AVS.SpotifyMusic.Domain.Streaming.Entidades.Musica", null)
                        .WithMany()
                        .HasForeignKey("MusicasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AVS.SpotifyMusic.Domain.Conta.Entidades.Playlist", null)
                        .WithMany()
                        .HasForeignKey("PlaylistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Conta.Entidades.Assinatura", b =>
                {
                    b.Navigation("Plano")
                        .IsRequired();
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Conta.Entidades.Usuario", b =>
                {
                    b.Navigation("Assinaturas");

                    b.Navigation("Cartoes");

                    b.Navigation("Notificacoes");

                    b.Navigation("Playlists");
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Pagamentos.Entidades.Cartao", b =>
                {
                    b.Navigation("Transacoes");
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Pagamentos.Entidades.Pagamento", b =>
                {
                    b.Navigation("Cartao")
                        .IsRequired();

                    b.Navigation("Transacao")
                        .IsRequired();
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Streaming.Entidades.Album", b =>
                {
                    b.Navigation("Musicas");
                });

            modelBuilder.Entity("AVS.SpotifyMusic.Domain.Streaming.Entidades.Banda", b =>
                {
                    b.Navigation("Albuns");
                });
#pragma warning restore 612, 618
        }
    }
}
